一.MyBatis:官网学习地址(http://www.mybatis.org/mybatis-3/zh/index.html)
简介概述:
MyBatis是一个优秀的持久层框架，它对JDBC操作数据库的过程进行了封装，使开发者只需要关注SQL本身。
可以使用简单的XML或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。
框架原理:SqlMapConfig.xml-SqlSessionFactory-SqlSession:操作数据库-Executor(内部操作数据库)-(输入参数)MappedStatemend(输出参数)

Mapper接口开发:
1、mapper.xml文件中的namespace与mapper.java接口的类的全路径相同。
2、mapper.java接口中的方法名和mapper.xml中定义的每个sql的id相同
3、mapper.java接口中的方法的输入参数类型和mapper.xml中定义的每个sql的parameterType的类型保持一致
4、mapper.java接口中方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型保持一致
eg:
sqlSession.getMapper(Class<T> type);

二.SqlMapConfig.xml配置
常用标签配置
properties //我们可将一些配置信息专门写在对应的配置文件中，然后在SqlMapConfig.xml引用即可
settings  //利用setting配置全局参数从而作用于MyBatis的行为
typeAliases //typeAliases可为Java类型设置一个别名从而减少类完全限定名的冗余
typeHandlers //MyBatis中通过typeHandlers完成JDBC类型和Java类型的转换
objectFactory
plugins
environments
    environment
        transactionManager
        dataSource
mappers //mappers用于配置SQL映射文件

XML映射文件:
#{ }表示占位符，用于接收输入参数。如果输入参数是简单类型，参数名可以任意(可以value或其它名称)。
当接收pojo对象值时可通过OGNL读取对象中的属性值；即利用属性.属性.属性…的方式获取对象属性值
${ }表示拼接,如果接收简单类型，${}中只能写成value。
当接收pojo对象值时可通过OGNL读取对象中的属性值；即利用属性.属性.属性…的方式获取对象属性值

A.MyBatis输入映射parameterType
parameterType对sql的输入参数进行定义，参数的类型可以是：基本类型、HashMap、pojo。
HashMap：在sql语句中从hashmap中取出对应key所对应的值.

B.MyBatis输出映射resultType以及resultMap
resultType对sql的输出参数进行定义，参数的类型可以是：基本类型、HashMap、pojo.
HaspMap:将输出的字段名称作为map的key，value为字段值
pojo:
注意:使用resultType进行输出映射时务必将查询的列名与pojo中的属性名保持一致！如果要求不一致，则可以使用resultMap.
resultMap:
eg:
<resultMap type="cn.com._Student" id="studentResultMap">
    <id column="id" property="_id" />
    <result column="name" property="_name" />
    <result column="gender" property="_gender" />
    <result column="birthday" property="_birthday" />
</resultMap>
<select id="_selectStudentByID" parameterType="int" resultMap="studentResultMap">
       SELECT * from student where id=#{value}
</select>

MyBatis的动态Sql
where和if
<foreach>标签来拼装
